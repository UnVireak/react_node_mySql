
const db = require("../ulit/db")
const bcrypt = require("bcrypt")

const {Tel, Password, ConfirmPassword} = req.body;
const hasPassword = await bcrypt.hashSync (Password, 10);
var sql = "UPDATE employee SET Password = ? WHERE Tel = ?";
    const data = await db.query(sql,[Password, Tel]);
    if(data){

    }
    res.json({
        message: "Password set success!",
        profile : {}
    })

const setPassword = async (req,res) => {
    // update column password
    const {
        phone,
        Password,
        ConfirmPassword
    } = req.body;
    //validate param require 
    var message = {}; // empty object
    if(phone == null || phone == ""){
        message.phone = "phone requred!"
    }
    if(Password == null || Password == ""){
        message.Password = "Password requred!"
    }else{
        if(Password != ConfirmPassword){
            message.Password = "Password not match!"
        }
    }
    if(Object.keys(message).length > 0){
        res.json({
            message : message
        })
        return false
    }

    const user = await checkIsExistUser(phone);
    if(!user){
        res.json({
            message : "User does not exist!",
        })
    }else{
        // bcrypt : hash password (123434=>sdfajo94u5o34up03452809453)
        const hashPassword = await bcrypt.hashSync(Password,10)
        var sql = "UPDATE employee SET Password = ? WHERE phone= ?";
        const data = await db.query(sql,[hashPassword,phone]);
        delete user.Password
        res.json({
            message : data.affectedRows ? "Passsword set success!" : "Something wrong!",
            profile : user
        }) 
    }
}
const checkIsExistUser = async (phone) => {
    const user = await db.query("SELECT * FROM employee WHERE phone = ?",[phone])
    if(user){
        return user[0]
    }else{
        return null
    }
}